[package]
name = "spa-server"
version = "2.4.0"
edition = "2021"
authors = ["timzaak"]
license = "MIT"
repository = "https://github.com/fornetcode/spa-server"
readme = "../README.md"
keywords = ["static-web-server", "spa-server"]
categories = ["web-programming::http-server"]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

include = ["src/**/*", "Cargo.toml"]

[[bin]]
name = "spa-server"
path = "src/main.rs"

[dependencies]
entity = { path = "../entity" }
# web
hyper = { version = "0.14", features = ["stream", "server", "http1", "http2", "tcp"] } # sync with warp
tokio = { version = "1.0", features = ["macros", "rt-multi-thread", "io-std", "sync", "time", "tokio-macros"] } # sync with warp
#tokio-util = "0.6.9" # sync with warp -> hyper -> h2
futures = "0.3"# sync with warp
warp = { path = "../warp", features = ["tls"] }
socket2 = "0.5.7"

# warp inner
percent-encoding = "2.1"
headers = "0.3.5"
mime = "0.3"
mime_guess = "2.0.0"
rustls = { version = "0.22" }
rustls-pemfile = "2.0"
#rustls-platform-verifier = "0.3"
#rustls-webpki = { version = "0.102.4", features = ["alloc"] } #sync with rustls
x509-parser = "0.16"
tokio-rustls = "0.25"
futures-util = "0.3"
bytes = "1"
# gzip
flate2 = "1.0"

# tokio trace and log
tracing = "0.1.21"# sync with warp
tracing-subscriber = { version = "0.3", features = ["env-filter"] }

tracing-opentelemetry = "0.24"
opentelemetry = { version = "0.23", features = ["trace"] }
opentelemetry_sdk = { version = "0.23", features = ["rt-tokio"] }
opentelemetry-otlp = { version = "0.16", features = ["default"] }
#opentelemetry-resource-detectors = { version = "0.2" }
opentelemetry-semantic-conventions = { version = "0.15" }

# tokio cron
delay_timer = "0.11.6" # dashmap is same

#config
toml = { version = "0.8.14" }
serde = { version = "1.0", features = ["derive"] }
serde_repr = "0.1"
serde_json = "1"
duration-str = "0.11"

base64 = "0.22"
#cache
dashmap = "5.5"

#s3
#rust-s3 = {version="0.31", features = ["blocking", "tokio-rustls-tls"], default-features = false}
small-acme = { path = "../small-acme" }
ureq = { version = "2", default-features = false, features = ["json", "tls"] } # from small-acme
rcgen = "0.12" # sync with small-acme
#pem = "3.0"# sync with rcgen
#webpki-roots = "0.26.3"
#instant-acme = {path = "../instant-acme"} has
#tokio-rustls-acme = "0.3"

# util
md-5 = "0.10"
regex = "1.10"
lazy_static = "1.4"
# solve return  result
anyhow = { version = "1.0", features = ["backtrace"] }
# solve dir walk without recursion
walkdir = "2.5"
# time
chrono = { version = "0.4", features = ["serde"] }
#make if let more easy
if_chain = "1"
tracing-core = "0.1.32"