# http bind, if set port <= 0, will disable http server.
port = 80
addr = "0.0.0.0"

# directory to store static files.
file_dir = "/data"

# enable cors, default is false, its implementation is simple now.
# Access-Control-Allow-Origin: *
# Access-Control-Allow-Methods: OPTION,GET,HEAD
# Access-Control-Max-Age: 3600
// cors = true

# https config, optional
//https {
//  # private ssl key
//  private = "private.key path",
//  # public ssl cert
//  public = "public.cert path"
//  port = 443
//  addr = "0.0.0.0"
//  # if set true, http server(80) will send client 301(Moved Permanently) to https.
//  # optional, default is false
//  http_redirect_to_https = false
//  # gzip compression for js/json/icon/json, default is false,
//  # only support gzip algo, only compress cached files,
//  # will occur error when client don't support gzip
//  # be careful to set it true
//  compression = false
//}

# cache config
//cache {
//  # if file size > max_size, it will not be cached. default is 10485760 (10M).
//  # do not use size unit format like 50m! It's blocked by [hocon #62](https://github.com/mockersf/hocon.rs/issues/62)
//  max_size = 10485760  //10M 10*1024*1024
//  # Cache-Control config, optional
//  client_cache = [{
//    expire = 30d
//    extension_names = [icon,gif,jpg,jpeg,png,js]
//  }, {
//    // set 0, would set Cache-Control: no-cache
//    expire = 0
//    extension_names = [html]
//  }]
//}

# admin server config, optional, and it's disabled by default. hot reload don't support admin server reload. the config should not change.
//admin_config {
//  port = 9000
//  addr = "127.0.0.1"
//  # this is used as auth check. In Header:  Authorization: Bearer token
//  token = "token"
//}
